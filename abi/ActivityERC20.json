{
  "abi": [
    {
      "type": "function",
      "name": "BPS_DIVISOR",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "_totalClaimed",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "activityFinished",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "checkInWhitelist",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" },
        { "name": "proof", "type": "bytes32[]", "internalType": "bytes32[]" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "claimed",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getActivityName",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getActivityStart",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAsset",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBoontyAddress",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBoontySetWhitelist",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBoontyToken",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBrandName",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getHoursAvailable",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMerkleRoot",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOwner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getShares",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSupply",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getWhenActivityFinished",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "boontyAddress",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "boontySetWhitelist",
          "type": "address",
          "internalType": "address"
        },
        { "name": "asset", "type": "address", "internalType": "address" },
        { "name": "supply", "type": "uint256", "internalType": "uint256" },
        { "name": "fees", "type": "uint16", "internalType": "uint16" },
        {
          "name": "brandAddress",
          "type": "address",
          "internalType": "address"
        },
        { "name": "brandName", "type": "string", "internalType": "string" },
        { "name": "activityName", "type": "string", "internalType": "string" },
        { "name": "maxWinners", "type": "uint256", "internalType": "uint256" },
        { "name": "activityStart", "type": "uint16", "internalType": "uint16" },
        { "name": "hoursAvailable", "type": "uint16", "internalType": "uint16" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isActivityFinished",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setMerkleRoot",
      "inputs": [
        { "name": "merkleRoot", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdrawPrize",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" },
        { "name": "proof", "type": "bytes32[]", "internalType": "bytes32[]" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "ClaimedBy",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "shares",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "timestamp",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50611101806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80638c1f80df116100b8578063d3a6727b1161007c578063d3a6727b14610271578063d73fe0aa14610284578063e18cb1481461028c578063fcdac49d1461029d578063fd515e38146102b0578063fe3d88bd146102b957600080fd5b80638c1f80df146102255780639736c4341461022d578063978dcce01461023e578063a0852d9114610246578063c884ef831461024e57600080fd5b806348ef55b81161010a57806348ef55b8146101ae57806349590657146101cc5780635c222bad146101d45780636c9c2faf146101f95780637cb6475914610201578063893d20e81461021457600080fd5b8063191fe1ed1461014757806327bf82f41461016a578063297409761461017c57806332c62de314610191578063474f36b414610199575b600080fd5b61015061271081565b60405163ffffffff90911681526020015b60405180910390f35b6007545b604051908152602001610161565b6101846102c1565b6040516101619190610bb4565b60095461016e565b6101ac6101a7366004610c1e565b610353565b005b600b54600160a01b900460ff165b6040519015158152602001610161565b60005461016e565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610161565b60065461016e565b6101ac61020f366004610ca4565b610568565b600b546001600160a01b03166101e1565b6101ac6105c7565b6001546001600160a01b03166101e1565b600a5461016e565b61016e6107b7565b6101bc61025c366004610cbd565b600c6020526000908152604090205460ff1681565b6101bc61027f366004610c1e565b6107db565b60085461016e565b6004546001600160a01b03166101e1565b6101ac6102ab366004610d8d565b610861565b61016e600d5481565b6101846109b4565b6060600380546102d090610e7f565b80601f01602080910402602001604051908101604052809291908181526020018280546102fc90610e7f565b80156103495780601f1061031e57610100808354040283529160200191610349565b820191906000526020600020905b81548152906001019060200180831161032c57829003601f168201915b5050505050905090565b600b54600160a01b900460ff16156103865760405162461bcd60e51b815260040161037d90610eb9565b60405180910390fd5b6009544210156103cf5760405162461bcd60e51b81526020600482015260146024820152731058dd1a5d9a5d1e481b9bdd081cdd185c9d195960621b604482015260640161037d565b600a546103de90610e10610efa565b6009546103eb9190610f11565b42111561040a5760405162461bcd60e51b815260040161037d90610eb9565b6104158383836107db565b6104615760405162461bcd60e51b815260206004820152601d60248201527f596f752063616e6e6f7420776974686472617720746865207072697a65000000604482015260640161037d565b6001600160a01b0383166000908152600c602052604090205460ff16156104c35760405162461bcd60e51b8152602060048201526016602482015275151bdad95b9cc8185b1c9958591e4818db185a5b595960521b604482015260640161037d565b6001600160a01b0383166000908152600c60205260408120805460ff19166001908117909155600d8054919290916104fc908490610f11565b909155505060085460055461051b906001600160a01b031685836109c3565b604080516001600160a01b038616815260208101839052428183015290517e947ef4ebc705be125859711d563ff41e5b4de059732f7a756fd288c6348b269181900360600190a150505050565b6004546001600160a01b031633146105c25760405162461bcd60e51b815260206004820152601e60248201527f4f6e6c7920626f6f6e747953657457686974656c697374416464726573730000604482015260640161037d565b600055565b600b54600160a01b900460ff16156105f15760405162461bcd60e51b815260040161037d90610eb9565b600654600854600d546106049190610efa565b0361066b57600b546001600160a01b031633148061062c57506001546001600160a01b031633145b61063557600080fd5b600b805460ff60a01b1916600160a01b179055600154600754600554610669926001600160a01b03918216929116906109c3565b565b600a5461067a90610e10610efa565b6009546106879190610f11565b421161076857600b546001600160a01b031633146106a457600080fd5b600b805460ff60a01b1916600160a01b1790556001546007546005546106d8926001600160a01b03918216929116906109c3565b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610721573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107459190610f24565b600b54600554919250610765916001600160a01b039081169116836109c3565b50565b600a5461077790610e10610efa565b6009546107849190610f11565b42111561066957600b546001600160a01b03163314806107ae57506001546001600160a01b031633145b6106a457600080fd5b6000600a54610e106107c99190610efa565b6009546107d69190610f11565b905090565b6040516bffffffffffffffffffffffff19606085901b16602082015260009081906034016040516020818303038152906040528051906020012090506108568484808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250549250859150610a1a9050565b9150505b9392505050565b600b546001600160a01b0316156108b05760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015260640161037d565b600b80546001600160a01b038089166001600160a01b031992831617909255600180548e8416908316179055600480548d841690831617905560058054928c1692909116919091179055600061090d8961ffff8a16612710610a30565b610917908a610f3d565b90506109238482610f66565b61092d9082610f3d565b600655600261093c8782610fc8565b5060036109498682610fc8565b506109548482611088565b600855610976876109658684610f66565b6001600160a01b038d1691906109c3565b610980818a610f3d565b60075561099361ffff8416610e10610efa565b61099d9042610f11565b6009555061ffff16600a5550505050505050505050565b6060600280546102d090610e7f565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610a15908490610ac2565b505050565b600082610a278584610b39565b14949350505050565b82820281838583041485151702610abb576000198385098181108201900382848609836000038416828511610a6d5763ae47f7026000526004601cfd5b9384900493838211909203600083900383900460010102920304176002600383028118808402820302808402820302808402820302808402820302808402820302808402909103020261085a565b0492915050565b600080602060008451602086016000885af180610ae5576040513d6000823e3d81fd5b50506000513d91508115610afd578060011415610b0a565b6001600160a01b0384163b155b15610b3357604051635274afe760e01b81526001600160a01b038516600482015260240161037d565b50505050565b600081815b8451811015610b7e57610b6a82868381518110610b5d57610b5d61109c565b6020026020010151610b88565b915080610b76816110b2565b915050610b3e565b5090505b92915050565b6000818310610ba457600082815260208490526040902061085a565b5060009182526020526040902090565b600060208083528351808285015260005b81811015610be157858101830151858201604001528201610bc5565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c1957600080fd5b919050565b600080600060408486031215610c3357600080fd5b610c3c84610c02565b9250602084013567ffffffffffffffff80821115610c5957600080fd5b818601915086601f830112610c6d57600080fd5b813581811115610c7c57600080fd5b8760208260051b8501011115610c9157600080fd5b6020830194508093505050509250925092565b600060208284031215610cb657600080fd5b5035919050565b600060208284031215610ccf57600080fd5b61085a82610c02565b803561ffff81168114610c1957600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f830112610d1157600080fd5b813567ffffffffffffffff80821115610d2c57610d2c610cea565b604051601f8301601f19908116603f01168101908282118183101715610d5457610d54610cea565b81604052838152866020858801011115610d6d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060008060008060006101608c8e031215610daf57600080fd5b610db88c610c02565b9a50610dc660208d01610c02565b9950610dd460408d01610c02565b985060608c01359750610de960808d01610cd8565b9650610df760a08d01610c02565b955067ffffffffffffffff8060c08e01351115610e1357600080fd5b610e238e60c08f01358f01610d00565b95508060e08e01351115610e3657600080fd5b50610e478d60e08e01358e01610d00565b93506101008c01359250610e5e6101208d01610cd8565b9150610e6d6101408d01610cd8565b90509295989b509295989b9093969950565b600181811c90821680610e9357607f821691505b602082108103610eb357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601190820152701058dd1a5d9a5d1e48199a5b9a5cda1959607a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610b8257610b82610ee4565b80820180821115610b8257610b82610ee4565b600060208284031215610f3657600080fd5b5051919050565b81810381811115610b8257610b82610ee4565b634e487b7160e01b600052601260045260246000fd5b600082610f7557610f75610f50565b500690565b601f821115610a1557600081815260208120601f850160051c81016020861015610fa15750805b601f850160051c820191505b81811015610fc057828155600101610fad565b505050505050565b815167ffffffffffffffff811115610fe257610fe2610cea565b610ff681610ff08454610e7f565b84610f7a565b602080601f83116001811461102b57600084156110135750858301515b600019600386901b1c1916600185901b178555610fc0565b600085815260208120601f198616915b8281101561105a5788860151825594840194600190910190840161103b565b50858210156110785787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008261109757611097610f50565b500490565b634e487b7160e01b600052603260045260246000fd5b6000600182016110c4576110c4610ee4565b506001019056fea26469706673582212209a2109eb355828e420ad604f5d1bfda2cbeb8e2e758610dde470c6937c7875fb64736f6c63430008140033",
    "sourceMap": "581:8025:49:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "581:8025:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;689:43;;726:6;689:43;;;;;188:10:60;176:23;;;158:42;;146:2;131:18;689:43:49;;;;;;;;4785:94;4860:12;;4785:94;;;357:25:60;;;345:2;330:18;4785:94:49;211:177:60;4245:102:49;;;:::i;:::-;;;;;;;:::i;5362:98::-;5439:14;;5362:98;;8167:437;;;;;;:::i;:::-;;:::i;:::-;;5624:100;5700:17;;-1:-1:-1;;;5700:17:49;;;;5624:100;;;1983:14:60;;1976:22;1958:41;;1946:2;1931:18;5624:100:49;1818:187:60;3836:92:49;3884:7;3910:11;3836:92;;4537:82;4606:6;;-1:-1:-1;;;;;4606:6:49;4537:82;;;-1:-1:-1;;;;;2356:32:60;;;2338:51;;2326:2;2311:18;4537:82:49;2192:203:60;4660:84:49;4730:7;;4660:84;;6021:179;;;;;;:::i;:::-;;:::i;5501:82::-;5570:6;;-1:-1:-1;;;;;5570:6:49;5501:82;;6497:1113;;;:::i;3969:98::-;4046:14;;-1:-1:-1;;;;;4046:14:49;3969:98;;5045:100;5123:15;;5045:100;;5186:135;;;:::i;1650:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7651:219;;;;;;:::i;:::-;;:::i;4920:84::-;4990:7;;4920:84;;4388:108;4470:19;;-1:-1:-1;;;;;4470:19:49;4388:108;;1818:1094;;;;;;:::i;:::-;;:::i;1724:28::-;;;;;;4108:96;;;:::i;4245:102::-;4295:13;4327;4320:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4245:102;:::o;8167:437::-;3303:17;;-1:-1:-1;;;3303:17:49;;;;3302:18;3294:48;;;;-1:-1:-1;;;3294:48:49;;;;;;;:::i;:::-;;;;;;;;;3379:14;;3360:15;:33;;3352:66;;;;-1:-1:-1;;;3352:66:49;;5925:2:60;3352:66:49;;;5907:21:60;5964:2;5944:18;;;5937:30;-1:-1:-1;;;5983:18:60;;;5976:50;6043:18;;3352:66:49;5723:344:60;3352:66:49;3473:15;;:25;;3491:7;3473:25;:::i;:::-;3455:14;;:44;;;;:::i;:::-;3436:15;:63;;3428:93;;;;-1:-1:-1;;;3428:93:49;;;;;;;:::i;:::-;8277:29:::1;8294:4;8300:5;;8277:16;:29::i;:::-;8269:71;;;::::0;-1:-1:-1;;;8269:71:49;;6709:2:60;8269:71:49::1;::::0;::::1;6691:21:60::0;6748:2;6728:18;;;6721:30;6787:31;6767:18;;;6760:59;6836:18;;8269:71:49::1;6507:353:60::0;8269:71:49::1;-1:-1:-1::0;;;;;8359:13:49;::::1;;::::0;;;:7:::1;:13;::::0;;;;;::::1;;8358:14;8350:49;;;::::0;-1:-1:-1;;;8350:49:49;;7067:2:60;8350:49:49::1;::::0;::::1;7049:21:60::0;7106:2;7086:18;;;7079:30;-1:-1:-1;;;7125:18:60;;;7118:52;7187:18;;8350:49:49::1;6865:346:60::0;8350:49:49::1;-1:-1:-1::0;;;;;8409:13:49;::::1;;::::0;;;:7:::1;:13;::::0;;;;:20;;-1:-1:-1;;8409:20:49::1;8425:4;8409:20:::0;;::::1;::::0;;;8439:13:::1;:18:::0;;8425:4;;8439:13;;:18:::1;::::0;8425:4;;8439:18:::1;:::i;:::-;::::0;;;-1:-1:-1;;8484:7:49::1;::::0;8508:6:::1;::::0;8501:41:::1;::::0;-1:-1:-1;;;;;8508:6:49::1;8529:4:::0;8484:7;8501:27:::1;:41::i;:::-;8557:40;::::0;;-1:-1:-1;;;;;7436:32:60;;7418:51;;7500:2;7485:18;;7478:34;;;8581:15:49::1;7528:18:60::0;;;7521:34;8557:40:49;;::::1;::::0;;;;7406:2:60;8557:40:49;;::::1;8259:345;8167:437:::0;;;:::o;6021:179::-;6105:19;;-1:-1:-1;;;;;6105:19:49;6091:10;:33;6083:76;;;;-1:-1:-1;;;6083:76:49;;7768:2:60;6083:76:49;;;7750:21:60;7807:2;7787:18;;;7780:30;7846:32;7826:18;;;7819:60;7896:18;;6083:76:49;7566:354:60;6083:76:49;6169:11;:24;6021:179::o;6497:1113::-;6551:17;;-1:-1:-1;;;6551:17:49;;;;6550:18;6542:48;;;;-1:-1:-1;;;6542:48:49;;;;;;;:::i;:::-;6632:7;;6621;;6605:13;;:23;;;;:::i;:::-;:34;6601:1003;;6677:6;;-1:-1:-1;;;;;6677:6:49;6663:10;:20;;:52;;-1:-1:-1;6701:14:49;;-1:-1:-1;;;;;6701:14:49;6687:10;:28;6663:52;6655:61;;;;;;6730:17;:24;;-1:-1:-1;;;;6730:24:49;-1:-1:-1;;;6730:24:49;;;6750:4;6797:14;6813:12;;6776:6;;6769:57;;-1:-1:-1;;;;;6776:6:49;;;;6797:14;;;6769:27;:57::i;:::-;6497:1113::o;6601:1003::-;6884:15;;:25;;6902:7;6884:25;:::i;:::-;6866:14;;:44;;;;:::i;:::-;6847:15;:63;6843:761;;6948:6;;-1:-1:-1;;;;;6948:6:49;6934:10;:20;6926:29;;;;;;6969:17;:24;;-1:-1:-1;;;;6969:24:49;-1:-1:-1;;;6969:24:49;;;6989:4;7036:14;7052:12;;7015:6;;7008:57;;-1:-1:-1;;;;;7015:6:49;;;;7036:14;;;7008:27;:57::i;:::-;7104:6;;7097:39;;-1:-1:-1;;;7097:39:49;;7130:4;7097:39;;;2338:51:60;7079:15:49;;-1:-1:-1;;;;;7104:6:49;;7097:24;;2311:18:60;;7097:39:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7178:6;;7157;;7079:57;;-1:-1:-1;7150:44:49;;-1:-1:-1;;;;;7157:6:49;;;;7178;7079:57;7150:27;:44::i;:::-;6912:293;6497:1113::o;6843:761::-;7251:15;;:25;;7269:7;7251:25;:::i;:::-;7233:14;;:44;;;;:::i;:::-;7215:15;:62;7211:393;;;7315:6;;-1:-1:-1;;;;;7315:6:49;7301:10;:20;;:52;;-1:-1:-1;7339:14:49;;-1:-1:-1;;;;;7339:14:49;7325:10;:28;7301:52;7293:61;;;;;5186:135;5244:7;5288:15;;5306:7;5288:25;;;;:::i;:::-;5270:14;;:44;;;;:::i;:::-;5263:51;;5186:135;:::o;7651:219::-;7779:22;;-1:-1:-1;;8263:2:60;8259:15;;;8255:53;7779:22:49;;;8243:66:60;7738:4:49;;;;8325:12:60;;7779:22:49;;;;;;;;;;;;7769:33;;;;;;7754:48;;7819:44;7838:5;;7819:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7845:11:49;;-1:-1:-1;7858:4:49;;-1:-1:-1;7819:18:49;;-1:-1:-1;7819:44:49:i;:::-;7812:51;;;7651:219;;;;;;:::o;1818:1094::-;2194:6;;-1:-1:-1;;;;;2194:6:49;:20;2186:52;;;;-1:-1:-1;;;2186:52:49;;8550:2:60;2186:52:49;;;8532:21:60;8589:2;8569:18;;;8562:30;-1:-1:-1;;;8608:18:60;;;8601:49;8667:18;;2186:52:49;8348:343:60;2186:52:49;2248:6;:21;;-1:-1:-1;;;;;2248:21:49;;;-1:-1:-1;;;;;;2248:21:49;;;;;;;;2279:30;;;;;;;;;;;2319:19;:40;;;;;;;;;;;2369:6;:14;;;;;;;;;;;;;;;2248:6;2422:64;2451:6;2422:64;;;726:6;2422:28;:64::i;:::-;2413:73;;:6;:73;:::i;:::-;2393:93;-1:-1:-1;2533:22:49;2545:10;2393:93;2533:22;:::i;:::-;2521:34;;:9;:34;:::i;:::-;2511:7;:44;2565:10;:22;2578:9;2565:10;:22;:::i;:::-;-1:-1:-1;2597:13:49;:28;2613:12;2597:13;:28;:::i;:::-;-1:-1:-1;2645:22:49;2657:10;2645:9;:22;:::i;:::-;2635:7;:32;2677:64;2704:12;2718:22;2730:10;2718:9;:22;:::i;:::-;-1:-1:-1;;;;;2677:26:49;;;:64;:26;:64::i;:::-;2766:18;2775:9;2766:6;:18;:::i;:::-;2751:12;:33;2830:32;:22;;;2855:7;2830:32;:::i;:::-;2811:52;;:15;:52;:::i;:::-;2794:14;:69;-1:-1:-1;2873:32:49;;:15;:32;-1:-1:-1;;;;;;;;;;1818:1094:49:o;4108:96::-;4155:13;4187:10;4180:17;;;;;:::i;1219:160:14:-;1328:43;;;-1:-1:-1;;;;;11599:32:60;;1328:43:14;;;11581:51:60;11648:18;;;;11641:34;;;1328:43:14;;;;;;;;;;11554:18:60;;;;1328:43:14;;;;;;;;-1:-1:-1;;;;;1328:43:14;-1:-1:-1;;;1328:43:14;;;1301:71;;1321:5;;1301:19;:71::i;:::-;1219:160;;;:::o;1902:154:24:-;1993:4;2045;2016:25;2029:5;2036:4;2016:12;:25::i;:::-;:33;;1902:154;-1:-1:-1;;;;1902:154:24:o;20943:3287:47:-;21489:9;;;21651:1;21646;21642;21639;21635:9;21632:16;21628:1;21621:9;21618:31;21614:39;21604:2543;;-1:-1:-1;;21697:1:47;21694;21687:20;21753:9;;;21746:17;;21738:26;;22012:1;22009;22006;21999:15;22093:1;22090;22086:9;22083:1;22079:17;22355:2;22352:1;22349:9;22339:161;;22399:10;22393:4;22386:24;22473:4;22467;22460:18;22339:161;22526:9;;;;;23939:8;;;23931:17;;;23962:1;23958:9;;;23954:17;;;23973:1;23950:25;23927:49;23982:9;;23978:17;23924:72;22972:1;22979;22975:9;;22968:17;;23270:11;;;23263:19;;23254:29;23347:11;;;23340:19;;23331:29;23425:11;;;23418:19;;23409:29;23503:11;;;23496:19;;23487:29;23581:11;;;23574:19;;23565:29;24037:11;;;24030:19;;;24026:29;23666:437;24124:5;;21604:2543;24169:9;;20943:3287;-1:-1:-1;;20943:3287:47:o;7686:720:14:-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;-1:-1:-1;;8232:1:14;8226:8;8182:16;;-1:-1:-1;8258:15:14;;:68;;8310:11;8325:1;8310:16;;8258:68;;;-1:-1:-1;;;;;8276:26:14;;;:31;8258:68;8254:146;;;8349:40;;-1:-1:-1;;;8349:40:14;;-1:-1:-1;;;;;2356:32:60;;8349:40:14;;;2338:51:60;2311:18;;8349:40:14;2192:203:60;8254:146:14;7756:650;;7686:720;;:::o;2457:308:24:-;2540:7;2582:4;2540:7;2596:134;2620:5;:12;2616:1;:16;2596:134;;;2668:51;2696:12;2710:5;2716:1;2710:8;;;;;;;;:::i;:::-;;;;;;;2668:27;:51::i;:::-;2653:66;-1:-1:-1;2634:3:24;;;;:::i;:::-;;;;2596:134;;;-1:-1:-1;2746:12:24;-1:-1:-1;2457:308:24;;;;;:::o;504:169:23:-;579:7;609:1;605;:5;:61;;866:13;930:15;;;965:4;958:15;;;1011:4;995:21;;605:61;;;-1:-1:-1;866:13:23;930:15;;;965:4;958:15;1011:4;995:21;;;504:169::o;393:548:60:-;505:4;534:2;563;552:9;545:21;595:6;589:13;638:6;633:2;622:9;618:18;611:34;663:1;673:140;687:6;684:1;681:13;673:140;;;782:14;;;778:23;;772:30;748:17;;;767:2;744:26;737:66;702:10;;673:140;;;677:3;862:1;857:2;848:6;837:9;833:22;829:31;822:42;932:2;925;921:7;916:2;908:6;904:15;900:29;889:9;885:45;881:54;873:62;;;;393:548;;;;:::o;946:173::-;1014:20;;-1:-1:-1;;;;;1063:31:60;;1053:42;;1043:70;;1109:1;1106;1099:12;1043:70;946:173;;;:::o;1124:689::-;1219:6;1227;1235;1288:2;1276:9;1267:7;1263:23;1259:32;1256:52;;;1304:1;1301;1294:12;1256:52;1327:29;1346:9;1327:29;:::i;:::-;1317:39;;1407:2;1396:9;1392:18;1379:32;1430:18;1471:2;1463:6;1460:14;1457:34;;;1487:1;1484;1477:12;1457:34;1525:6;1514:9;1510:22;1500:32;;1570:7;1563:4;1559:2;1555:13;1551:27;1541:55;;1592:1;1589;1582:12;1541:55;1632:2;1619:16;1658:2;1650:6;1647:14;1644:34;;;1674:1;1671;1664:12;1644:34;1727:7;1722:2;1712:6;1709:1;1705:14;1701:2;1697:23;1693:32;1690:45;1687:65;;;1748:1;1745;1738:12;1687:65;1779:2;1775;1771:11;1761:21;;1801:6;1791:16;;;;;1124:689;;;;;:::o;2400:180::-;2459:6;2512:2;2500:9;2491:7;2487:23;2483:32;2480:52;;;2528:1;2525;2518:12;2480:52;-1:-1:-1;2551:23:60;;2400:180;-1:-1:-1;2400:180:60:o;2585:186::-;2644:6;2697:2;2685:9;2676:7;2672:23;2668:32;2665:52;;;2713:1;2710;2703:12;2665:52;2736:29;2755:9;2736:29;:::i;2776:159::-;2843:20;;2903:6;2892:18;;2882:29;;2872:57;;2925:1;2922;2915:12;2940:127;3001:10;2996:3;2992:20;2989:1;2982:31;3032:4;3029:1;3022:15;3056:4;3053:1;3046:15;3072:719;3115:5;3168:3;3161:4;3153:6;3149:17;3145:27;3135:55;;3186:1;3183;3176:12;3135:55;3222:6;3209:20;3248:18;3285:2;3281;3278:10;3275:36;;;3291:18;;:::i;:::-;3366:2;3360:9;3334:2;3420:13;;-1:-1:-1;;3416:22:60;;;3440:2;3412:31;3408:40;3396:53;;;3464:18;;;3484:22;;;3461:46;3458:72;;;3510:18;;:::i;:::-;3550:10;3546:2;3539:22;3585:2;3577:6;3570:18;3631:3;3624:4;3619:2;3611:6;3607:15;3603:26;3600:35;3597:55;;;3648:1;3645;3638:12;3597:55;3712:2;3705:4;3697:6;3693:17;3686:4;3678:6;3674:17;3661:54;3759:1;3752:4;3747:2;3739:6;3735:15;3731:26;3724:37;3779:6;3770:15;;;;;;3072:719;;;;:::o;3796:1191::-;3962:6;3970;3978;3986;3994;4002;4010;4018;4026;4034;4042:7;4096:3;4084:9;4075:7;4071:23;4067:33;4064:53;;;4113:1;4110;4103:12;4064:53;4136:29;4155:9;4136:29;:::i;:::-;4126:39;;4184:38;4218:2;4207:9;4203:18;4184:38;:::i;:::-;4174:48;;4241:38;4275:2;4264:9;4260:18;4241:38;:::i;:::-;4231:48;;4326:2;4315:9;4311:18;4298:32;4288:42;;4349:38;4382:3;4371:9;4367:19;4349:38;:::i;:::-;4339:48;;4406:39;4440:3;4429:9;4425:19;4406:39;:::i;:::-;4396:49;;4464:18;4532:2;4525:3;4514:9;4510:19;4497:33;4494:41;4491:61;;;4548:1;4545;4538:12;4491:61;4571:77;4640:7;4632:3;4621:9;4617:19;4604:33;4593:9;4589:49;4571:77;:::i;:::-;4561:87;;4698:2;4691:3;4680:9;4676:19;4663:33;4660:41;4657:61;;;4714:1;4711;4704:12;4657:61;;4737:77;4806:7;4798:3;4787:9;4783:19;4770:33;4759:9;4755:49;4737:77;:::i;:::-;4727:87;;4861:3;4850:9;4846:19;4833:33;4823:43;;4885:38;4918:3;4907:9;4903:19;4885:38;:::i;:::-;4875:48;;4943:38;4976:3;4965:9;4961:19;4943:38;:::i;:::-;4932:49;;3796:1191;;;;;;;;;;;;;;:::o;4992:380::-;5071:1;5067:12;;;;5114;;;5135:61;;5189:4;5181:6;5177:17;5167:27;;5135:61;5242:2;5234:6;5231:14;5211:18;5208:38;5205:161;;5288:10;5283:3;5279:20;5276:1;5269:31;5323:4;5320:1;5313:15;5351:4;5348:1;5341:15;5205:161;;4992:380;;;:::o;5377:341::-;5579:2;5561:21;;;5618:2;5598:18;;;5591:30;-1:-1:-1;;;5652:2:60;5637:18;;5630:47;5709:2;5694:18;;5377:341::o;6072:127::-;6133:10;6128:3;6124:20;6121:1;6114:31;6164:4;6161:1;6154:15;6188:4;6185:1;6178:15;6204:168;6277:9;;;6308;;6325:15;;;6319:22;;6305:37;6295:71;;6346:18;;:::i;6377:125::-;6442:9;;;6463:10;;;6460:36;;;6476:18;;:::i;7925:184::-;7995:6;8048:2;8036:9;8027:7;8023:23;8019:32;8016:52;;;8064:1;8061;8054:12;8016:52;-1:-1:-1;8087:16:60;;7925:184;-1:-1:-1;7925:184:60:o;8696:128::-;8763:9;;;8784:11;;;8781:37;;;8798:18;;:::i;8829:127::-;8890:10;8885:3;8881:20;8878:1;8871:31;8921:4;8918:1;8911:15;8945:4;8942:1;8935:15;8961:112;8993:1;9019;9009:35;;9024:18;;:::i;:::-;-1:-1:-1;9058:9:60;;8961:112::o;9204:545::-;9306:2;9301:3;9298:11;9295:448;;;9342:1;9367:5;9363:2;9356:17;9412:4;9408:2;9398:19;9482:2;9470:10;9466:19;9463:1;9459:27;9453:4;9449:38;9518:4;9506:10;9503:20;9500:47;;;-1:-1:-1;9541:4:60;9500:47;9596:2;9591:3;9587:12;9584:1;9580:20;9574:4;9570:31;9560:41;;9651:82;9669:2;9662:5;9659:13;9651:82;;;9714:17;;;9695:1;9684:13;9651:82;;;9655:3;;;9204:545;;;:::o;9925:1352::-;10051:3;10045:10;10078:18;10070:6;10067:30;10064:56;;;10100:18;;:::i;:::-;10129:97;10219:6;10179:38;10211:4;10205:11;10179:38;:::i;:::-;10173:4;10129:97;:::i;:::-;10281:4;;10345:2;10334:14;;10362:1;10357:663;;;;11064:1;11081:6;11078:89;;;-1:-1:-1;11133:19:60;;;11127:26;11078:89;-1:-1:-1;;9882:1:60;9878:11;;;9874:24;9870:29;9860:40;9906:1;9902:11;;;9857:57;11180:81;;10327:944;;10357:663;9151:1;9144:14;;;9188:4;9175:18;;-1:-1:-1;;10393:20:60;;;10511:236;10525:7;10522:1;10519:14;10511:236;;;10614:19;;;10608:26;10593:42;;10706:27;;;;10674:1;10662:14;;;;10541:19;;10511:236;;;10515:3;10775:6;10766:7;10763:19;10760:201;;;10836:19;;;10830:26;-1:-1:-1;;10919:1:60;10915:14;;;10931:3;10911:24;10907:37;10903:42;10888:58;10873:74;;10760:201;-1:-1:-1;;;;;11007:1:60;10991:14;;;10987:22;10974:36;;-1:-1:-1;9925:1352:60:o;11282:120::-;11322:1;11348;11338:35;;11353:18;;:::i;:::-;-1:-1:-1;11387:9:60;;11282:120::o;11686:127::-;11747:10;11742:3;11738:20;11735:1;11728:31;11778:4;11775:1;11768:15;11802:4;11799:1;11792:15;11818:135;11857:3;11878:17;;;11875:43;;11898:18;;:::i;:::-;-1:-1:-1;11945:1:60;11934:13;;11818:135::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BPS_DIVISOR()": "191fe1ed",
    "_totalClaimed()": "fd515e38",
    "activityFinished()": "8c1f80df",
    "checkInWhitelist(address,bytes32[])": "d3a6727b",
    "claimed(address)": "c884ef83",
    "getActivityName()": "29740976",
    "getActivityStart()": "32c62de3",
    "getAsset()": "5c222bad",
    "getBoontyAddress()": "9736c434",
    "getBoontySetWhitelist()": "e18cb148",
    "getBoontyToken()": "27bf82f4",
    "getBrandName()": "fe3d88bd",
    "getHoursAvailable()": "978dcce0",
    "getMerkleRoot()": "49590657",
    "getOwner()": "893d20e8",
    "getShares()": "d73fe0aa",
    "getSupply()": "6c9c2faf",
    "getWhenActivityFinished()": "a0852d91",
    "initialize(address,address,address,uint256,uint16,address,string,string,uint256,uint16,uint16)": "fcdac49d",
    "isActivityFinished()": "48ef55b8",
    "setMerkleRoot(bytes32)": "7cb64759",
    "withdrawPrize(address,bytes32[])": "474f36b4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ClaimedBy\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BPS_DIVISOR\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activityFinished\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"checkInWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivityName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivityStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBoontyAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBoontySetWhitelist\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBoontyToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBrandName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHoursAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWhenActivityFinished\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"boontyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"boontySetWhitelist\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"fees\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"brandAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"brandName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"activityName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxWinners\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"activityStart\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"hoursAvailable\",\"type\":\"uint16\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isActivityFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"withdrawPrize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A contract representing an ERC20-based activity.\",\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"ClaimedBy(address,uint256,uint256)\":{\"params\":{\"shares\":\"The amount of shares claimed.\",\"timestamp\":\"The timestamp of the claim.\",\"user\":\"The address of the user.\"}}},\"kind\":\"dev\",\"methods\":{\"activityFinished()\":{\"details\":\"Marks the activity as finished and handles token transfers.\"},\"checkInWhitelist(address,bytes32[])\":{\"details\":\"Checks if an address is whitelisted.\",\"params\":{\"proof\":\"Merkle proof to verify.\",\"user\":\"Address to check.\"},\"returns\":{\"_0\":\"A boolean indicating whether the address is whitelisted.\"}},\"getActivityName()\":{\"details\":\"Returns the activity name.\",\"returns\":{\"_0\":\"The activity name.\"}},\"getActivityStart()\":{\"details\":\"Returns the start time of the activity.\",\"returns\":{\"_0\":\"The start time.\"}},\"getAsset()\":{\"details\":\"Returns the USDT token address.\",\"returns\":{\"_0\":\"The USDT token address.\"}},\"getBoontyAddress()\":{\"details\":\"Returns the Boonty contract address.\",\"returns\":{\"_0\":\"The Boonty contract address.\"}},\"getBoontySetWhitelist()\":{\"details\":\"Returns the BoontySetWhitelist contract address.\",\"returns\":{\"_0\":\"The BoontySetWhitelist contract address.\"}},\"getBoontyToken()\":{\"details\":\"Returns the Boonty token amount.\",\"returns\":{\"_0\":\"The Boonty token amount.\"}},\"getBrandName()\":{\"details\":\"Returns the brand name.\",\"returns\":{\"_0\":\"The brand name.\"}},\"getHoursAvailable()\":{\"details\":\"Returns the duration of the activity in hours.\",\"returns\":{\"_0\":\"The duration in hours.\"}},\"getMerkleRoot()\":{\"details\":\"Returns the Merkle root for whitelist verification.\",\"returns\":{\"_0\":\"The Merkle root.\"}},\"getOwner()\":{\"details\":\"Returns the owner address.\",\"returns\":{\"_0\":\"The owner address.\"}},\"getShares()\":{\"details\":\"Returns the share of tokens per winner.\",\"returns\":{\"_0\":\"The share of tokens.\"}},\"getSupply()\":{\"details\":\"Returns the total supply of ERC20 tokens for the activity.\",\"returns\":{\"_0\":\"The total supply.\"}},\"getWhenActivityFinished()\":{\"details\":\"Returns the time when the activity is finished.\",\"returns\":{\"_0\":\"The time when the activity is finished.\"}},\"initialize(address,address,address,uint256,uint16,address,string,string,uint256,uint16,uint16)\":{\"details\":\"Initializes the ERC20-based activity.\",\"params\":{\"activityName\":\"Name of the activity.\",\"activityStart\":\"Delay in hours from the current block timestamp after which the activity starts.\",\"asset\":\"Address of the USDT token.\",\"boontyAddress\":\"Address of the Boonty.\",\"boontySetWhitelist\":\"Address of the BoontySetWhitelist contract.\",\"brandAddress\":\"Address of the brand.\",\"brandName\":\"Brand name of the activity.\",\"fees\":\"Percentage of fees.\",\"hoursAvailable\":\"Duration of the activity in hours.\",\"maxWinners\":\"Number of winners for the activity.\",\"supply\":\"Total supply of ERC20 tokens for the activity.\"}},\"isActivityFinished()\":{\"details\":\"Returns whether the activity is finished or not.\",\"returns\":{\"_0\":\"A boolean indicating whether the activity is finished.\"}},\"setMerkleRoot(bytes32)\":{\"details\":\"Sets the Merkle root for whitelist verification.\",\"params\":{\"merkleRoot\":\"The Merkle root to set.\"}},\"withdrawPrize(address,bytes32[])\":{\"details\":\"Allows a whitelisted address to withdraw a prize.\",\"params\":{\"proof\":\"Merkle proof to verify the whitelist.\",\"user\":\"Address to withdraw the prize.\"}}},\"title\":\"ActivityERC20\",\"version\":1},\"userdoc\":{\"events\":{\"ClaimedBy(address,uint256,uint256)\":{\"notice\":\"Emitted when a user claims a prize.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ActivityERC20.sol\":\"ActivityERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts-5.2.0/=dependencies/@openzeppelin-contracts-5.2.0/\",\":forge-std-1.9.6/=dependencies/forge-std-1.9.6/src/\",\":solady-0.1.10/=dependencies/solady-0.1.10/src/\"]},\"sources\":{\"dependencies/@openzeppelin-contracts-5.2.0/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"dependencies/@openzeppelin-contracts-5.2.0/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"dependencies/@openzeppelin-contracts-5.2.0/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"dependencies/@openzeppelin-contracts-5.2.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"dependencies/@openzeppelin-contracts-5.2.0/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x631dc1958d5308bd2d9f91190bbcde4f9ffb9d9401ce8d358c17b35f1a942bb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7ef16d9a6f57eae9ab275116eaba1e8de70efd3d0e3682b1585b8f069d9c3f9\",\"dweb:/ipfs/QmR3JQHAyv4sNWnRHeiC6oaz8Bqn8rtzu5sdAqAJRtBqpj\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"dependencies/solady-0.1.10/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x092bd51e8387ea93e8725a8ab1ba038d0badc173cb4919baee0fe057df4d7487\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://546581d50db02bfa41dc75880ac50079b1dbfc8e83f53f4a4756d5080e532703\",\"dweb:/ipfs/QmV3eY6bESnjfjv7bKK7Y2vAyqy1RtiKpqGnkXBqcLSPM5\"]},\"src/ActivityERC20.sol\":{\"keccak256\":\"0xbf35970f54f86b3b9d2037cf8d88d9c69fceee8d065729d37a7c0cf4b107474f\",\"license\":\"lilyan bastien Siren 983058728\",\"urls\":[\"bzz-raw://15a26ddf0c9d57e4bcd4f757ac4da02cb9f9a74a089aad49f96663a6bea0d3b0\",\"dweb:/ipfs/QmNMDK1FKP867aogaaoMWVawpteqkhgLTgKm6puDdNsKUa\"]},\"src/interfaces/IActivityERC20.sol\":{\"keccak256\":\"0xb55a8a3bcfd066ef407b050784bea36be886b50d3ec1f95b47b06bf6a1e9e793\",\"license\":\"lilyan bastien Siren 983058728\",\"urls\":[\"bzz-raw://94002888b1a021e35d193267594516669ecd6f710a3e938cf6e056c17dc89429\",\"dweb:/ipfs/QmZ6pnMZSrxcsmQYWq1shCyfFjrSN7AguJBaRUyKnnLPrU\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.20+commit.a1b79de6" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimedBy",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BPS_DIVISOR",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_totalClaimed",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activityFinished"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkInWhitelist",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "claimed",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActivityName",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActivityStart",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAsset",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBoontyAddress",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBoontySetWhitelist",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBoontyToken",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBrandName",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getHoursAvailable",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMerkleRoot",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOwner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getShares",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupply",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getWhenActivityFinished",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "boontyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "boontySetWhitelist",
              "type": "address"
            },
            { "internalType": "address", "name": "asset", "type": "address" },
            { "internalType": "uint256", "name": "supply", "type": "uint256" },
            { "internalType": "uint16", "name": "fees", "type": "uint16" },
            {
              "internalType": "address",
              "name": "brandAddress",
              "type": "address"
            },
            { "internalType": "string", "name": "brandName", "type": "string" },
            {
              "internalType": "string",
              "name": "activityName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "maxWinners",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "activityStart",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "hoursAvailable",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isActivityFinished",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMerkleRoot"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawPrize"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "activityFinished()": {
            "details": "Marks the activity as finished and handles token transfers."
          },
          "checkInWhitelist(address,bytes32[])": {
            "details": "Checks if an address is whitelisted.",
            "params": {
              "proof": "Merkle proof to verify.",
              "user": "Address to check."
            },
            "returns": {
              "_0": "A boolean indicating whether the address is whitelisted."
            }
          },
          "getActivityName()": {
            "details": "Returns the activity name.",
            "returns": { "_0": "The activity name." }
          },
          "getActivityStart()": {
            "details": "Returns the start time of the activity.",
            "returns": { "_0": "The start time." }
          },
          "getAsset()": {
            "details": "Returns the USDT token address.",
            "returns": { "_0": "The USDT token address." }
          },
          "getBoontyAddress()": {
            "details": "Returns the Boonty contract address.",
            "returns": { "_0": "The Boonty contract address." }
          },
          "getBoontySetWhitelist()": {
            "details": "Returns the BoontySetWhitelist contract address.",
            "returns": { "_0": "The BoontySetWhitelist contract address." }
          },
          "getBoontyToken()": {
            "details": "Returns the Boonty token amount.",
            "returns": { "_0": "The Boonty token amount." }
          },
          "getBrandName()": {
            "details": "Returns the brand name.",
            "returns": { "_0": "The brand name." }
          },
          "getHoursAvailable()": {
            "details": "Returns the duration of the activity in hours.",
            "returns": { "_0": "The duration in hours." }
          },
          "getMerkleRoot()": {
            "details": "Returns the Merkle root for whitelist verification.",
            "returns": { "_0": "The Merkle root." }
          },
          "getOwner()": {
            "details": "Returns the owner address.",
            "returns": { "_0": "The owner address." }
          },
          "getShares()": {
            "details": "Returns the share of tokens per winner.",
            "returns": { "_0": "The share of tokens." }
          },
          "getSupply()": {
            "details": "Returns the total supply of ERC20 tokens for the activity.",
            "returns": { "_0": "The total supply." }
          },
          "getWhenActivityFinished()": {
            "details": "Returns the time when the activity is finished.",
            "returns": { "_0": "The time when the activity is finished." }
          },
          "initialize(address,address,address,uint256,uint16,address,string,string,uint256,uint16,uint16)": {
            "details": "Initializes the ERC20-based activity.",
            "params": {
              "activityName": "Name of the activity.",
              "activityStart": "Delay in hours from the current block timestamp after which the activity starts.",
              "asset": "Address of the USDT token.",
              "boontyAddress": "Address of the Boonty.",
              "boontySetWhitelist": "Address of the BoontySetWhitelist contract.",
              "brandAddress": "Address of the brand.",
              "brandName": "Brand name of the activity.",
              "fees": "Percentage of fees.",
              "hoursAvailable": "Duration of the activity in hours.",
              "maxWinners": "Number of winners for the activity.",
              "supply": "Total supply of ERC20 tokens for the activity."
            }
          },
          "isActivityFinished()": {
            "details": "Returns whether the activity is finished or not.",
            "returns": {
              "_0": "A boolean indicating whether the activity is finished."
            }
          },
          "setMerkleRoot(bytes32)": {
            "details": "Sets the Merkle root for whitelist verification.",
            "params": { "merkleRoot": "The Merkle root to set." }
          },
          "withdrawPrize(address,bytes32[])": {
            "details": "Allows a whitelisted address to withdraw a prize.",
            "params": {
              "proof": "Merkle proof to verify the whitelist.",
              "user": "Address to withdraw the prize."
            }
          }
        },
        "version": 1
      },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-contracts-5.2.0/=dependencies/@openzeppelin-contracts-5.2.0/",
        "forge-std-1.9.6/=dependencies/forge-std-1.9.6/src/",
        "solady-0.1.10/=dependencies/solady-0.1.10/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/ActivityERC20.sol": "ActivityERC20" },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "dependencies/@openzeppelin-contracts-5.2.0/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf",
        "urls": [
          "bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329",
          "dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/cryptography/Hashes.sol": {
        "keccak256": "0x631dc1958d5308bd2d9f91190bbcde4f9ffb9d9401ce8d358c17b35f1a942bb7",
        "urls": [
          "bzz-raw://e7ef16d9a6f57eae9ab275116eaba1e8de70efd3d0e3682b1585b8f069d9c3f9",
          "dweb:/ipfs/QmR3JQHAyv4sNWnRHeiC6oaz8Bqn8rtzu5sdAqAJRtBqpj"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134",
        "urls": [
          "bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6",
          "dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/math/Math.sol": {
        "keccak256": "0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea",
        "urls": [
          "bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d",
          "dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "dependencies/solady-0.1.10/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x092bd51e8387ea93e8725a8ab1ba038d0badc173cb4919baee0fe057df4d7487",
        "urls": [
          "bzz-raw://546581d50db02bfa41dc75880ac50079b1dbfc8e83f53f4a4756d5080e532703",
          "dweb:/ipfs/QmV3eY6bESnjfjv7bKK7Y2vAyqy1RtiKpqGnkXBqcLSPM5"
        ],
        "license": "MIT"
      },
      "src/ActivityERC20.sol": {
        "keccak256": "0xbf35970f54f86b3b9d2037cf8d88d9c69fceee8d065729d37a7c0cf4b107474f",
        "urls": [
          "bzz-raw://15a26ddf0c9d57e4bcd4f757ac4da02cb9f9a74a089aad49f96663a6bea0d3b0",
          "dweb:/ipfs/QmNMDK1FKP867aogaaoMWVawpteqkhgLTgKm6puDdNsKUa"
        ],
        "license": "lilyan bastien Siren 983058728"
      },
      "src/interfaces/IActivityERC20.sol": {
        "keccak256": "0xb55a8a3bcfd066ef407b050784bea36be886b50d3ec1f95b47b06bf6a1e9e793",
        "urls": [
          "bzz-raw://94002888b1a021e35d193267594516669ecd6f710a3e938cf6e056c17dc89429",
          "dweb:/ipfs/QmZ6pnMZSrxcsmQYWq1shCyfFjrSN7AguJBaRUyKnnLPrU"
        ],
        "license": "lilyan bastien Siren 983058728"
      }
    },
    "version": 1
  },
  "id": 49
}
